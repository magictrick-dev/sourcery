# Initialize the CMake version
cmake_minimum_required(VERSION 3.21)

# Define the build type.
# Build types are: DEBUG, PERFDEBUG, RELEASE
set(PROJECT_BUILD_TYPE "DEBUG")

# Set the base properties for the project and define the project.
set(CMAKE_C_STANDARD 11)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
project(sourcery)

# Define the executable and source files.
add_executable(sourcery

./src/main.h
./src/main.c

./src/sourcery/generics.h
./src/sourcery/filehandle.h

./src/sourcery/memory/memutils.h
./src/sourcery/memory/memutils.c

./src/sourcery/memory/alloc.h
./src/sourcery/memory/alloc.c

./src/sourcery/structures/node_trunk.h
./src/sourcery/structures/node_trunk.c

./src/sourcery/string/string_utils.h
./src/sourcery/string/string_utils.c

./src/platform/win32/win32_filehandle.c
./src/platform/win32/win32_alloc.c

)

# Determine if this build is debug and then set the appropriate variables and options.
if (PROJECT_BUILD_TYPE STREQUAL "DEBUG")

	# The project is in debug mode, therefore we should set the appropriate options.
	message("[Project Configuration] : Loading DEBUG options...")

	if (MSVC)
		set(COMPILE_OPTIONS "/W4" "/WX" "/DEBUG")
	else ()
		set(COMPILE_OPTIONS "-Wall" "-Wextra" "-pedantic" "-Werror" "-g")
	endif()

	# Platform-agnostic definitions.
	add_compile_definitions(SOURCERY_BUILD_TYPE=${PROJECT_BUILD_TYPE})
	add_compile_definitions(SOURCERY_DEBUG)
else ()

	# The project is in release mode.
	message("[Project Configuration] : Loading RELEASE options...")


endif ()

# Apply the compile options.
if (MSVC)
	add_compile_options(${COMPILE_OPTIONS})
else ()
	add_compile_options(${COMPILE_OPTIONS})
endif ()

# Set Visual Studio's startup project to the base project.
if (MSVC)
	set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT sourcery)
endif ()

# Allow absolute referencing for project files located in ./src
target_include_directories(sourcery PUBLIC ./src)
